'use strict';

//Constructor Functions
const Person = function (firstName, birthYear) {
  this.firstName = firstName;
  this.birthYear = birthYear;
};

const jonas = new Person('Jonas', 1991);
console.log(jonas);

//1. New empty object is created
//2. Function is called, this is set to the newly created objected
//3. {} linked to a prototype
//4.  function automatically returns the {}

const matilla = new Person('Matilla', 1981);
const jack = new Person('Jack', 1993);

console.log(matilla, jack);
console.log(jonas instanceof Person);

//Prototypes
Person.prototype.calcAge = function () {
  console.log(2021 - this.birthYear);
};

jonas.calcAge();

console.log(jonas.__proto__);
console.log(Person.prototype.isPrototypeOf(jonas));

//.prototypeOfLinkedObjects
Person.prototype.species = 'Homo Sapiens';
console.log(jonas.species, matilla.species);
console.log(jonas.hasOwnProperty('firstName'));
console.log(jonas.hasOwnProperty('species'));

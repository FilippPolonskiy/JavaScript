
const oneWord = function (str) {
  str.replace(/ /g, '').toLowerCase();
};

const upperFirstWord = function (str) {
  const [first, ...others] = str.split(' ');
  return [first.toUpperCase(), ...others].join(' ');
};

const transformer = function (str, fn) {
  console.log(`original string: ${str}`);
  console.log(`Transformed string ${fn(str)}`);

  console.log(`Transformed by ${fn.name}`);
};
// transformer('JavaScript is the best programming language', upperFirstWord);
// transformer('JavaScript is the best programming language', oneWord);

const greet = function (greeting) {
  return function (name) {
    console.log(`${greeting} ${name}`);
  };
};

const greeterHey = greet('Hey');
greeterHey(' Steven');
greet('Hello')('Jonas');

//Challenge
const greetArr = greeting => name => console.log(`${greeting} ${name}`);

const luftHansa = {
  airline: 'Lufthansa',
  iataCode: 'LH',
  bookings: [],
  book(flightNumber, name) {
    console.log(
      `${name} booked a place  on a ${this.airline} fligh ${this.iataCode}${flightNumber}`
    );
    this.bookings.push({ flight: `${this.iataCode}${flightNumber}`, name });
  },
};

luftHansa.book(239, 'Jonas Huesos');
luftHansa.book(635, 'John Smith');
console.log(luftHansa);

const euroWings = {
  airline: 'Euro Wings',
  iataCode: 'EW',
  bookings: [],
};

const swiss = {
  airline: 'Swiss',
  iataCode: 'SW',
  bookings: [],
};

//Call Method- setting "this" in the function
const book = luftHansa.book;
book.call(euroWings, 23, 'Dich Petrovna');
console.log(euroWings);
book.call(luftHansa, 23, 'Dich Petrovna');
console.log(luftHansa);

//Apply
const flightData = [583, 'George Cooper'];
//Below is the old option
book.apply(swiss, flightData);

//Now do like this
book.call(swiss, ...flightData);

//Bind method
const bookEW = book.bind(euroWings);
const bookLH = book.bind(luftHansa);
bookEW(568, 'Steven Williams');

const bookEW23 = book.bind(euroWings, 23);
bookEW23('Mary poppins');
console.log(euroWings);

//With EventListeners
luftHansa.plains = 300;
luftHansa.buyPlane = function () {
  this.plains++;
  console.log(this);
  console.log(this.plains);
};

document
  .querySelector('.buy')
  .addEventListener('click', luftHansa.buyPlane.bind(luftHansa));

//Partial application

const addTax = (rate, value) => value + value * rate;
console.log(addTax(0.1, 200));

//first arg is null because there is no "this" keyword and we have to set it
const addVat = addTax.bind(null, 0.23);

const addTaxRate = function (rate) {
  return function (value) {
    return value + value * rate;
  };
};
